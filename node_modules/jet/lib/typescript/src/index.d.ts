import React from 'react';
import { type TextProps } from 'react-native';
import { type ClientConfig } from 'mocha-remote-client';
import type { JetConfig } from './types';
export type { JetConfig };
export type Status = {
    kind: 'waiting';
} | {
    kind: 'running';
    failures: number;
    totalTests: number;
    currentTest: string;
    currentTestIndex: number;
} | {
    kind: 'ended';
    failures: number;
    totalTests: number;
};
export type JetProviderProps = React.PropsWithChildren<{
    tests: (context: JetConfig) => void;
} & Partial<Pick<ClientConfig, 'url' | 'title'>>>;
export type JetContextValue = {
    connected: boolean;
    status: Status;
    config: JetConfig;
};
export declare const JetContext: React.Context<JetContextValue>;
export declare function JetProvider(props: JetProviderProps): React.JSX.Element;
export declare function useJetContext(): JetContextValue;
export declare function StatusEmoji(props: TextProps): React.JSX.Element;
export declare function StatusText(props: TextProps): React.JSX.Element;
export declare function ConnectionText(props: TextProps): React.JSX.Element;
//# sourceMappingURL=index.d.ts.map